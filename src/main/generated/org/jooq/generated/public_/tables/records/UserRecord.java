/*
 * This file is generated by jOOQ.
 */

package org.jooq.generated.public_.tables.records;


import javax.annotation.processing.Generated;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.generated.public_.tables.User;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings( {"all", "unchecked", "rawtypes"})
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<String, String, String, String, String, String, Double> {

    private static final long serialVersionUID = 371949615;

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String id, String name, String email, String phone, String bic, String iban, Double balance) {
        super(User.USER);

        set(0, id);
        set(1, name);
        set(2, email);
        set(3, phone);
        set(4, bic);
        set(5, iban);
        set(6, balance);
    }

    /**
     * Getter for <code>public.USER.ID</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.USER.ID</code>.
     */
    public UserRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.USER.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.USER.NAME</code>.
     */
    public UserRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.USER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.USER.EMAIL</code>.
     */
    public UserRecord setEmail(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.USER.PHONE</code>.
     */
    public String getPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.USER.PHONE</code>.
     */
    public UserRecord setPhone(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.USER.BIC</code>.
     */
    public String getBic() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.USER.BIC</code>.
     */
    public UserRecord setBic(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.USER.IBAN</code>.
     */
    public String getIban() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.USER.IBAN</code>.
     */
    public UserRecord setIban(String value) {
        set(5, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>public.USER.BALANCE</code>.
     */
    public Double getBalance() {
        return (Double) get(6);
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>public.USER.BALANCE</code>.
     */
    public UserRecord setBalance(Double value) {
        set(6, value);
        return this;
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row7<String, String, String, String, String, String, Double> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, String, Double> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PHONE;
    }

    @Override
    public Field<String> field5() {
        return User.USER.BIC;
    }

    @Override
    public Field<String> field6() {
        return User.USER.IBAN;
    }

    @Override
    public Field<Double> field7() {
        return User.USER.BALANCE;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPhone();
    }

    @Override
    public String component5() {
        return getBic();
    }

    @Override
    public String component6() {
        return getIban();
    }

    @Override
    public Double component7() {
        return getBalance();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPhone();
    }

    @Override
    public String value5() {
        return getBic();
    }

    @Override
    public String value6() {
        return getIban();
    }

    @Override
    public Double value7() {
        return getBalance();
    }

    @Override
    public UserRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setBic(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setIban(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public UserRecord value7(Double value) {
        setBalance(value);
        return this;
    }

    @Override
    public UserRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Double value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }
}
